# -*- coding: utf-8 -*-
"""Copy of Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CA8Kb_lVdsjAnD04TVA1tLfQcYfvOTCg
"""

import pandas as pd
import matplotlib.pyplot as plt 
import seaborn as sns
tt=pd.read_csv('titanic-passengers.csv',sep=';')
tt.head()

tt.shape

tt.info()

tt.describe()

tt.isnull().sum() / tt.shape[0] *100

tt.nunique() / tt.shape[0] * 100

tt1=tt.drop('Cabin',axis=1,inplace=False)
tt1.head()

tt1.duplicated().any()

tt1.fillna(value=0,inplace=True)

tt1.dropna(subset=['Embarked'],inplace=True)

tt1.isnull().sum()

Title_Dictionary = {

                    "Capt":       "Officer",

                    "Col":        "Officer",

                    "Major":      "Officer",

                      "Dr":         "Officer",

                    "Rev":        "Office",

                    "Jonkheer":   "Royalty",

                    "Don":        "Royalty",

                    "Sir" :       "Royalty",

                   "Lady" :      "Royalty" ,

                  "the Countess" : "Royalty",

                    "Dona":       "Royalty",

                    "Mme":        "Miss",

                    "Mlle":       "Miss",

                    "Miss" :      "Miss",

                    "Ms":         "Mrs",

                    "Mr" :        "Mrs",

                    "Mrs" :       "Mrs",

                    "Master" :    "Master"

                    }
tt1['Name'].map(lambda name : name.split(',')[1].split('.')[0])

tt1.sample(5)

tt1['Statue'] = tt1['Name'].map(lambda name:name.split(',')[1].split('.')[0].strip())

tt1.replace({'Statue': Title_Dictionary}) 
tt1.sample()

sns.countplot(x='Statue',data=tt1)

sns.histplot(x='Age',data=tt1)

sns.countplot(x="Embarked",data=tt1)

sns.countplot(x="Pclass",data=tt1)

sns.countplot(x='Sex',data=tt1)

sns.countplot(x='Survived',data=tt1)

sns.countplot(x='Sex',data=tt1)

sns.countplot(x='Sex',hue='Survived',data=tt1)

sns.countplot(x='Survived',hue='Sex',data=tt1)

sns.countplot(x = 'Survived' , hue = 'Pclass', data =tt1)

sns.boxplot(x='Survived', y='Age',data=tt1 )

def plot_correlation_map( df ):

    corr = df.corr()

    s , ax = plt.subplots( figsize =( 12 , 10 ) )

    cmap = sns.diverging_palette( 220 , 10 , as_cmap = True )

    s = sns.heatmap(

        corr, 

        cmap = cmap,

        square=True, 

        cbar_kws={ 'shrink' : .9 }, 

        ax=ax, 

        annot = True, 

        annot_kws = { 'fontsize' : 12 }

        )
plot_correlation_map(tt1)

#this map is a correlation map that serves to show the strengh of the bond between features , the closer it is to 1 the stronger is the bond and the closer it is to negatives the weaker is the bond

tt1['Family Size']=tt1['SibSp']+tt1['Parch']+1
tt1.head()



sns.countplot(x='Family Size',hue='Survived',data=tt1)
# this graph is not useful to know the chances of sufvival of an individual family of 11 did not survive and most single ppl did not survive

